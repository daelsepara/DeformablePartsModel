
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action removeModelButton;

	private global::Gtk.Action clearModelsButton;

	private global::Gtk.Action applyModelsButton;

	private global::Gtk.Action addModelButton;

	private global::Gtk.Fixed LayoutMain;

	private global::Gtk.Notebook NotebookMain;

	private global::Gtk.Fixed LayoutImage;

	private global::Gtk.EventBox ImageEventBox;

	private global::Gtk.Image imageBox;

	private global::Gtk.Fixed editRegionLayout;

	private global::Gtk.Label LabelWidth;

	private global::Gtk.SpinButton widthScaleNumeric;

	private global::Gtk.HScale widthScale;

	private global::Gtk.Label LabelHeight;

	private global::Gtk.SpinButton heightScaleNumeric;

	private global::Gtk.HScale heightScale;

	private global::Gtk.Label LabelX;

	private global::Gtk.SpinButton dxScaleNumeric;

	private global::Gtk.HScale dxScale;

	private global::Gtk.Label LabelY;

	private global::Gtk.SpinButton dyScaleNumeric;

	private global::Gtk.HScale dyScale;

	private global::Gtk.Label LabelScore;

	private global::Gtk.Entry Score;

	private global::Gtk.Label LabelClass;

	private global::Gtk.Entry ClassName;

	private global::Gtk.Label LabelModels;

	private global::Gtk.ScrolledWindow ModelsWindow;

	private global::Gtk.TextView ModelsView;

	private global::Gtk.Toolbar ModelsToolbar;

	private global::Gtk.Label LabelImage;

	private global::Gtk.Button LoadImageButton;

	private global::Gtk.Button SaveImageButton;

	private global::Gtk.Button SaveObjectsButton;

	private global::Gtk.Button DetectButton;

	private global::Gtk.Button ClearButton;

	private global::Gtk.ToggleButton SelectMode;

	private global::Gtk.Button SelectModelButton;

	private global::Gtk.SpinButton Threshold;

	private global::Gtk.Label LabelThreshold;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
		this.removeModelButton = new global::Gtk.Action("removeModelButton", null, global::Mono.Unix.Catalog.GetString("remove model"), "gtk-remove");
		w1.Add(this.removeModelButton, null);
		this.clearModelsButton = new global::Gtk.Action("clearModelsButton", null, global::Mono.Unix.Catalog.GetString("remove all models"), "gtk-delete");
		w1.Add(this.clearModelsButton, null);
		this.applyModelsButton = new global::Gtk.Action("applyModelsButton", null, global::Mono.Unix.Catalog.GetString("use all models"), "gtk-apply");
		w1.Add(this.applyModelsButton, null);
		this.addModelButton = new global::Gtk.Action("addModelButton", null, global::Mono.Unix.Catalog.GetString("add model"), "gtk-add");
		w1.Add(this.addModelButton, null);
		this.UIManager.InsertActionGroup(w1, 0);
		this.AddAccelGroup(this.UIManager.AccelGroup);
		this.WidthRequest = 1024;
		this.HeightRequest = 600;
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("Object Detector Based on Deformable Parts Models");
		this.WindowPosition = ((global::Gtk.WindowPosition)(1));
		this.Resizable = false;
		this.AllowGrow = false;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.LayoutMain = new global::Gtk.Fixed();
		this.LayoutMain.Name = "LayoutMain";
		this.LayoutMain.HasWindow = false;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.NotebookMain = new global::Gtk.Notebook();
		this.NotebookMain.WidthRequest = 960;
		this.NotebookMain.HeightRequest = 540;
		this.NotebookMain.Name = "NotebookMain";
		this.NotebookMain.CurrentPage = 0;
		// Container child NotebookMain.Gtk.Notebook+NotebookChild
		this.LayoutImage = new global::Gtk.Fixed();
		this.LayoutImage.Name = "LayoutImage";
		this.LayoutImage.HasWindow = false;
		// Container child LayoutImage.Gtk.Fixed+FixedChild
		this.ImageEventBox = new global::Gtk.EventBox();
		this.ImageEventBox.WidthRequest = 640;
		this.ImageEventBox.HeightRequest = 480;
		this.ImageEventBox.Name = "ImageEventBox";
		// Container child ImageEventBox.Gtk.Container+ContainerChild
		this.imageBox = new global::Gtk.Image();
		this.imageBox.WidthRequest = 640;
		this.imageBox.HeightRequest = 480;
		this.imageBox.Name = "imageBox";
		this.ImageEventBox.Add(this.imageBox);
		this.LayoutImage.Add(this.ImageEventBox);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.LayoutImage[this.ImageEventBox]));
		w3.X = 20;
		w3.Y = 10;
		// Container child LayoutImage.Gtk.Fixed+FixedChild
		this.editRegionLayout = new global::Gtk.Fixed();
		this.editRegionLayout.WidthRequest = 250;
		this.editRegionLayout.HeightRequest = 280;
		this.editRegionLayout.Name = "editRegionLayout";
		this.editRegionLayout.HasWindow = false;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelWidth = new global::Gtk.Label();
		this.LabelWidth.Name = "LabelWidth";
		this.LabelWidth.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Width</b>");
		this.LabelWidth.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelWidth);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelWidth]));
		w4.X = 5;
		w4.Y = 15;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.widthScaleNumeric = new global::Gtk.SpinButton(2D, 10000D, 1D);
		this.widthScaleNumeric.WidthRequest = 180;
		this.widthScaleNumeric.Name = "widthScaleNumeric";
		this.widthScaleNumeric.Adjustment.PageIncrement = 1D;
		this.widthScaleNumeric.ClimbRate = 1D;
		this.widthScaleNumeric.Numeric = true;
		this.widthScaleNumeric.Value = 2D;
		this.editRegionLayout.Add(this.widthScaleNumeric);
		global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.widthScaleNumeric]));
		w5.X = 60;
		w5.Y = 10;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.widthScale = new global::Gtk.HScale(null);
		this.widthScale.WidthRequest = 180;
		this.widthScale.Name = "widthScale";
		this.widthScale.Adjustment.Lower = 2D;
		this.widthScale.Adjustment.Upper = 10000D;
		this.widthScale.Adjustment.PageIncrement = 1D;
		this.widthScale.Adjustment.StepIncrement = 1D;
		this.widthScale.DrawValue = false;
		this.widthScale.Digits = 0;
		this.widthScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.widthScale);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.widthScale]));
		w6.X = 60;
		w6.Y = 40;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelHeight = new global::Gtk.Label();
		this.LabelHeight.Name = "LabelHeight";
		this.LabelHeight.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Height</b>");
		this.LabelHeight.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelHeight);
		global::Gtk.Fixed.FixedChild w7 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelHeight]));
		w7.X = 5;
		w7.Y = 65;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.heightScaleNumeric = new global::Gtk.SpinButton(2D, 10000D, 1D);
		this.heightScaleNumeric.WidthRequest = 180;
		this.heightScaleNumeric.Name = "heightScaleNumeric";
		this.heightScaleNumeric.Adjustment.PageIncrement = 1D;
		this.heightScaleNumeric.ClimbRate = 1D;
		this.heightScaleNumeric.Numeric = true;
		this.heightScaleNumeric.Value = 2D;
		this.editRegionLayout.Add(this.heightScaleNumeric);
		global::Gtk.Fixed.FixedChild w8 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.heightScaleNumeric]));
		w8.X = 60;
		w8.Y = 60;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.heightScale = new global::Gtk.HScale(null);
		this.heightScale.WidthRequest = 180;
		this.heightScale.CanFocus = true;
		this.heightScale.Name = "heightScale";
		this.heightScale.Adjustment.Lower = 2D;
		this.heightScale.Adjustment.Upper = 10000D;
		this.heightScale.Adjustment.PageIncrement = 1D;
		this.heightScale.Adjustment.StepIncrement = 1D;
		this.heightScale.DrawValue = false;
		this.heightScale.Digits = 0;
		this.heightScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.heightScale);
		global::Gtk.Fixed.FixedChild w9 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.heightScale]));
		w9.X = 60;
		w9.Y = 90;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelX = new global::Gtk.Label();
		this.LabelX.Name = "LabelX";
		this.LabelX.LabelProp = global::Mono.Unix.Catalog.GetString("<b>X</b>");
		this.LabelX.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelX);
		global::Gtk.Fixed.FixedChild w10 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelX]));
		w10.X = 40;
		w10.Y = 115;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dxScaleNumeric = new global::Gtk.SpinButton(-1000D, 10000D, 1D);
		this.dxScaleNumeric.WidthRequest = 180;
		this.dxScaleNumeric.Name = "dxScaleNumeric";
		this.dxScaleNumeric.Adjustment.PageIncrement = 1D;
		this.dxScaleNumeric.ClimbRate = 1D;
		this.dxScaleNumeric.Numeric = true;
		this.editRegionLayout.Add(this.dxScaleNumeric);
		global::Gtk.Fixed.FixedChild w11 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dxScaleNumeric]));
		w11.X = 60;
		w11.Y = 110;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dxScale = new global::Gtk.HScale(null);
		this.dxScale.WidthRequest = 180;
		this.dxScale.Name = "dxScale";
		this.dxScale.Adjustment.Lower = -10000D;
		this.dxScale.Adjustment.Upper = 10000D;
		this.dxScale.Adjustment.PageIncrement = 1D;
		this.dxScale.Adjustment.StepIncrement = 1D;
		this.dxScale.DrawValue = false;
		this.dxScale.Digits = 0;
		this.dxScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.dxScale);
		global::Gtk.Fixed.FixedChild w12 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dxScale]));
		w12.X = 60;
		w12.Y = 140;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelY = new global::Gtk.Label();
		this.LabelY.Name = "LabelY";
		this.LabelY.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Y</b>");
		this.LabelY.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelY);
		global::Gtk.Fixed.FixedChild w13 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelY]));
		w13.X = 40;
		w13.Y = 165;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dyScaleNumeric = new global::Gtk.SpinButton(-10000D, 10000D, 1D);
		this.dyScaleNumeric.WidthRequest = 180;
		this.dyScaleNumeric.Name = "dyScaleNumeric";
		this.dyScaleNumeric.Adjustment.PageIncrement = 1D;
		this.dyScaleNumeric.ClimbRate = 1D;
		this.dyScaleNumeric.Numeric = true;
		this.editRegionLayout.Add(this.dyScaleNumeric);
		global::Gtk.Fixed.FixedChild w14 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dyScaleNumeric]));
		w14.X = 60;
		w14.Y = 160;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dyScale = new global::Gtk.HScale(null);
		this.dyScale.WidthRequest = 180;
		this.dyScale.Name = "dyScale";
		this.dyScale.Adjustment.Lower = -10000D;
		this.dyScale.Adjustment.Upper = 10000D;
		this.dyScale.Adjustment.PageIncrement = 1D;
		this.dyScale.Adjustment.StepIncrement = 1D;
		this.dyScale.DrawValue = false;
		this.dyScale.Digits = 0;
		this.dyScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.dyScale);
		global::Gtk.Fixed.FixedChild w15 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dyScale]));
		w15.X = 60;
		w15.Y = 190;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelScore = new global::Gtk.Label();
		this.LabelScore.Name = "LabelScore";
		this.LabelScore.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Score</b>");
		this.LabelScore.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelScore);
		global::Gtk.Fixed.FixedChild w16 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelScore]));
		w16.X = 15;
		w16.Y = 215;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.Score = new global::Gtk.Entry();
		this.Score.WidthRequest = 180;
		this.Score.Name = "Score";
		this.Score.IsEditable = false;
		this.Score.InvisibleChar = '•';
		this.editRegionLayout.Add(this.Score);
		global::Gtk.Fixed.FixedChild w17 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.Score]));
		w17.X = 60;
		w17.Y = 210;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.LabelClass = new global::Gtk.Label();
		this.LabelClass.Name = "LabelClass";
		this.LabelClass.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Class</b>");
		this.LabelClass.UseMarkup = true;
		this.editRegionLayout.Add(this.LabelClass);
		global::Gtk.Fixed.FixedChild w18 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.LabelClass]));
		w18.X = 15;
		w18.Y = 245;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.ClassName = new global::Gtk.Entry();
		this.ClassName.WidthRequest = 180;
		this.ClassName.Name = "ClassName";
		this.ClassName.IsEditable = false;
		this.ClassName.InvisibleChar = '•';
		this.editRegionLayout.Add(this.ClassName);
		global::Gtk.Fixed.FixedChild w19 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.ClassName]));
		w19.X = 60;
		w19.Y = 240;
		this.LayoutImage.Add(this.editRegionLayout);
		global::Gtk.Fixed.FixedChild w20 = ((global::Gtk.Fixed.FixedChild)(this.LayoutImage[this.editRegionLayout]));
		w20.X = 680;
		w20.Y = 10;
		// Container child LayoutImage.Gtk.Fixed+FixedChild
		this.LabelModels = new global::Gtk.Label();
		this.LabelModels.Name = "LabelModels";
		this.LabelModels.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Models</b>");
		this.LabelModels.UseMarkup = true;
		this.LayoutImage.Add(this.LabelModels);
		global::Gtk.Fixed.FixedChild w21 = ((global::Gtk.Fixed.FixedChild)(this.LayoutImage[this.LabelModels]));
		w21.X = 695;
		w21.Y = 300;
		// Container child LayoutImage.Gtk.Fixed+FixedChild
		this.ModelsWindow = new global::Gtk.ScrolledWindow();
		this.ModelsWindow.WidthRequest = 225;
		this.ModelsWindow.HeightRequest = 120;
		this.ModelsWindow.Name = "ModelsWindow";
		this.ModelsWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child ModelsWindow.Gtk.Container+ContainerChild
		this.ModelsView = new global::Gtk.TextView();
		this.ModelsView.Name = "ModelsView";
		this.ModelsView.Editable = false;
		this.ModelsView.AcceptsTab = false;
		this.ModelsWindow.Add(this.ModelsView);
		this.LayoutImage.Add(this.ModelsWindow);
		global::Gtk.Fixed.FixedChild w23 = ((global::Gtk.Fixed.FixedChild)(this.LayoutImage[this.ModelsWindow]));
		w23.X = 695;
		w23.Y = 320;
		// Container child LayoutImage.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString(@"<ui><toolbar name='ModelsToolbar'><toolitem name='addModelButton' action='addModelButton'/><toolitem name='removeModelButton' action='removeModelButton'/><toolitem name='clearModelsButton' action='clearModelsButton'/><toolitem name='applyModelsButton' action='applyModelsButton'/></toolbar></ui>");
		this.ModelsToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/ModelsToolbar")));
		this.ModelsToolbar.Name = "ModelsToolbar";
		this.ModelsToolbar.ShowArrow = false;
		this.ModelsToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.LayoutImage.Add(this.ModelsToolbar);
		global::Gtk.Fixed.FixedChild w24 = ((global::Gtk.Fixed.FixedChild)(this.LayoutImage[this.ModelsToolbar]));
		w24.X = 700;
		w24.Y = 450;
		this.NotebookMain.Add(this.LayoutImage);
		// Notebook tab
		this.LabelImage = new global::Gtk.Label();
		this.LabelImage.Name = "LabelImage";
		this.LabelImage.LabelProp = global::Mono.Unix.Catalog.GetString("Image");
		this.NotebookMain.SetTabLabel(this.LayoutImage, this.LabelImage);
		this.LabelImage.ShowAll();
		this.LayoutMain.Add(this.NotebookMain);
		global::Gtk.Fixed.FixedChild w26 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.NotebookMain]));
		w26.X = 30;
		w26.Y = 10;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.LoadImageButton = new global::Gtk.Button();
		this.LoadImageButton.Name = "LoadImageButton";
		this.LoadImageButton.UseUnderline = true;
		this.LoadImageButton.FocusOnClick = false;
		this.LoadImageButton.Label = global::Mono.Unix.Catalog.GetString("select image");
		this.LayoutMain.Add(this.LoadImageButton);
		global::Gtk.Fixed.FixedChild w27 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.LoadImageButton]));
		w27.X = 30;
		w27.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.SaveImageButton = new global::Gtk.Button();
		this.SaveImageButton.Name = "SaveImageButton";
		this.SaveImageButton.UseUnderline = true;
		this.SaveImageButton.FocusOnClick = false;
		this.SaveImageButton.Label = global::Mono.Unix.Catalog.GetString("save processed image");
		this.LayoutMain.Add(this.SaveImageButton);
		global::Gtk.Fixed.FixedChild w28 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.SaveImageButton]));
		w28.X = 125;
		w28.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.SaveObjectsButton = new global::Gtk.Button();
		this.SaveObjectsButton.Name = "SaveObjectsButton";
		this.SaveObjectsButton.UseUnderline = true;
		this.SaveObjectsButton.FocusOnClick = false;
		this.SaveObjectsButton.Label = global::Mono.Unix.Catalog.GetString("save objects");
		this.LayoutMain.Add(this.SaveObjectsButton);
		global::Gtk.Fixed.FixedChild w29 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.SaveObjectsButton]));
		w29.X = 285;
		w29.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.DetectButton = new global::Gtk.Button();
		this.DetectButton.Name = "DetectButton";
		this.DetectButton.UseUnderline = true;
		this.DetectButton.FocusOnClick = false;
		this.DetectButton.Label = global::Mono.Unix.Catalog.GetString("detect");
		this.LayoutMain.Add(this.DetectButton);
		global::Gtk.Fixed.FixedChild w30 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.DetectButton]));
		w30.X = 380;
		w30.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.ClearButton = new global::Gtk.Button();
		this.ClearButton.Name = "ClearButton";
		this.ClearButton.UseUnderline = true;
		this.ClearButton.FocusOnClick = false;
		this.ClearButton.Label = global::Mono.Unix.Catalog.GetString("clear");
		this.LayoutMain.Add(this.ClearButton);
		global::Gtk.Fixed.FixedChild w31 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.ClearButton]));
		w31.X = 440;
		w31.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.SelectMode = new global::Gtk.ToggleButton();
		this.SelectMode.WidthRequest = 110;
		this.SelectMode.Name = "SelectMode";
		this.SelectMode.FocusOnClick = false;
		this.SelectMode.Label = global::Mono.Unix.Catalog.GetString("select mode");
		this.LayoutMain.Add(this.SelectMode);
		global::Gtk.Fixed.FixedChild w32 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.SelectMode]));
		w32.X = 485;
		w32.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.SelectModelButton = new global::Gtk.Button();
		this.SelectModelButton.Name = "SelectModelButton";
		this.SelectModelButton.UseUnderline = true;
		this.SelectModelButton.FocusOnClick = false;
		this.SelectModelButton.Label = global::Mono.Unix.Catalog.GetString("select model");
		this.LayoutMain.Add(this.SelectModelButton);
		global::Gtk.Fixed.FixedChild w33 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.SelectModelButton]));
		w33.X = 600;
		w33.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.Threshold = new global::Gtk.SpinButton(-100D, 100D, 1D);
		this.Threshold.WidthRequest = 120;
		this.Threshold.Name = "Threshold";
		this.Threshold.Adjustment.PageIncrement = 1D;
		this.Threshold.ClimbRate = 1D;
		this.Threshold.Digits = ((uint)(8));
		this.Threshold.Numeric = true;
		this.LayoutMain.Add(this.Threshold);
		global::Gtk.Fixed.FixedChild w34 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.Threshold]));
		w34.X = 700;
		w34.Y = 560;
		// Container child LayoutMain.Gtk.Fixed+FixedChild
		this.LabelThreshold = new global::Gtk.Label();
		this.LabelThreshold.Name = "LabelThreshold";
		this.LabelThreshold.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Detection Threshold</b>");
		this.LabelThreshold.UseMarkup = true;
		this.LayoutMain.Add(this.LabelThreshold);
		global::Gtk.Fixed.FixedChild w35 = ((global::Gtk.Fixed.FixedChild)(this.LayoutMain[this.LabelThreshold]));
		w35.X = 830;
		w35.Y = 565;
		this.Add(this.LayoutMain);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 1280;
		this.DefaultHeight = 600;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.removeModelButton.Activated += new global::System.EventHandler(this.OnRemoveModelButtonActivated);
		this.clearModelsButton.Activated += new global::System.EventHandler(this.OnClearModelsButtonActivated);
		this.applyModelsButton.Activated += new global::System.EventHandler(this.OnApplyModelsButtonActivated);
		this.addModelButton.Activated += new global::System.EventHandler(this.OnAddModelButtonActivated);
		this.ImageEventBox.MotionNotifyEvent += new global::Gtk.MotionNotifyEventHandler(this.OnImageEventBoxMotionNotifyEvent);
		this.ImageEventBox.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler(this.OnImageEventBoxButtonPressEvent);
		this.ImageEventBox.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler(this.OnImageEventBoxButtonReleaseEvent);
		this.widthScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericResizeEvent);
		this.widthScale.ValueChanged += new global::System.EventHandler(this.ScaleResizeEvent);
		this.heightScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericResizeEvent);
		this.heightScale.ValueChanged += new global::System.EventHandler(this.ScaleResizeEvent);
		this.dxScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericMoveEvent);
		this.dxScale.ValueChanged += new global::System.EventHandler(this.ScaleMoveEvent);
		this.dyScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericMoveEvent);
		this.dyScale.ValueChanged += new global::System.EventHandler(this.ScaleMoveEvent);
		this.LoadImageButton.Clicked += new global::System.EventHandler(this.OnLoadImageButtonClicked);
		this.SaveImageButton.Clicked += new global::System.EventHandler(this.OnSaveImageButtonClicked);
		this.SaveObjectsButton.Clicked += new global::System.EventHandler(this.OnSaveObjectsButtonClicked);
		this.DetectButton.Clicked += new global::System.EventHandler(this.OnDetectButtonClicked);
		this.ClearButton.Clicked += new global::System.EventHandler(this.OnClearButtonClicked);
		this.SelectMode.Toggled += new global::System.EventHandler(this.ToggleSelectMode);
		this.SelectModelButton.Clicked += new global::System.EventHandler(this.OnSelectModelButtonClicked);
		this.Threshold.ValueChanged += new global::System.EventHandler(this.OnThresholdValueChanged);
	}
}
